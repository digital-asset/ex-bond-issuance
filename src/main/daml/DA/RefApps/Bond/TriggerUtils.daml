--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

daml 1.2
module DA.RefApps.Bond.TriggerUtils where

import DA.Foldable hiding (foldl)
import DA.Next.Map
import Daml.Trigger

type Rule = Party -> ACS -> Time -> Map CommandId [Command] -> () -> TriggerA ()

unionRegisteredTemplates : [RegisteredTemplates] -> RegisteredTemplates
unionRegisteredTemplates =
  foldl unionRegTs emptyRT
 where
  emptyRT = RegisteredTemplates []
  unionRegTs AllInDar _ = AllInDar
  unionRegTs _ AllInDar = AllInDar
  unionRegTs (RegisteredTemplates xs) (RegisteredTemplates ys) =
    RegisteredTemplates $ xs ++ ys

unionRules : [Rule] -> Rule
unionRules rules party acs time cmds _ =
  forA_ rules $
    \rule -> rule party acs time cmds ()

unionTriggers : [Trigger ()] -> Trigger ()
unionTriggers triggers =  Trigger
    { initialize = const ()
    , updateState = \_ _ _ -> ()
    , rule =
        unionRules $ rule <$> triggers
    , registeredTemplates =
        unionRegisteredTemplates $ registeredTemplates <$> triggers
    , heartbeat = None
    }