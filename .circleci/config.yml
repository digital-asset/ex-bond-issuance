#
# Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  daml-executor:
    docker:
      - image: cimg/openjdk:11.0-node
  mvn-executor:
    docker:
      - image: cimg/openjdk:11.0
    resource_class: large

commands:
  install_sdk:
    description: "Install the DAML SDK"
    parameters:
      version:
        type: string
    steps:
      - run:
          name: Install the DAML SDK
          command: |
            curl -sSL https://get.daml.com/ | sh /dev/stdin << parameters.version >>
            # idea from https://circleci.com/docs/2.0/env-vars/
            >> $BASH_ENV echo 'export PATH="$HOME/.daml/bin:$PATH"'
  slack_notification:
    description: "Notify about failure on Slack"
    steps:
      - slack/status:
          fail_only: true
          only_for_branches: master
          webhook: '${SLACK_WEBHOOK}'
jobs:
  integration_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: mvn-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
            - m2
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - run:
          name: Integration tests
          command: |
            mvn verify
      - run:
          command: |
            echo "Moving log files so they can be stored."
            mkdir logs
            mv *.log logs
          when: always
      - store_artifacts:
          path: logs
      - save_cache:
          paths:
            - ~/.m2
            - ~/.daml
          key: m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/surefire-reports
      - run:
          command: |
            mkdir pmd
            mv target/pmd.xml pmd
          when: always
      - store_artifacts:
          path: pmd
      - persist_to_workspace:
          root: target
          paths:
            - "*.jar"
            - "*.dar"
            - "lib"
            - "NOTICE"
      - slack_notification

  daml_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - daml-{{ checksum "daml.yaml" }}
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - run:
          name: Build DAML
          command: |
            make build-dars
      - run:
          name: DAML tests
          command: |
            make test-dars
      - save_cache:
          paths:
            - ~/.daml
          key: daml-{{ checksum "daml.yaml" }}
      - store_test_results:
          path: target/daml-test-reports
      - store_artifacts:
          path: target/daml-test-reports
      - slack_notification

  ui_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - daml-{{ checksum "daml.yaml" }}
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - run:
          name: UI Install Dependencies
          command: |
            make build
      - run:
          name: UI Build
          command: |
            make package CI=
            # TODO remove "CI=" to treat warnings as errors
      - save_cache:
          paths:
            - ~/.daml
          key: daml-{{ checksum "daml.yaml" }}
      - slack_notification

  blackduck_check:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
            - m2
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - save_cache:
          paths:
            - ~/.m2
            - ~/.daml
          key: m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
      - run:
          name: Maven Build
          command: |
            mvn clean package
      - run:
          name: UI Install Dependencies
          command: |
            make build
      - run:
          name: Yarn Recursive Install
          command: |
            # recurse all directories with a package.json and run yarn install on them to resolve dependencies
            find . -type f \( ! -path '*node_modules*' \) -name package.json | while read hit ; do yarn install --cwd $(dirname "$hit") ; done
      - run:
          name: Run Blackduck Detect
          command: |
            bash <(curl -s https://raw.githubusercontent.com/DACH-NY/security-blackduck/master/synopsys-detect) \
            ci-build digitalasset_ex-bond-issuance master \
            --logging.level.com.synopsys.integration=DEBUG \
            --detect.notices.report=false \
            --detect.report.timeout=1800
### Temporarily disabled due to Blackduck issue (see https://github.com/digital-asset/ex-bond-issuance/pull/156)
#      - run:
#          command: cp digitalasset_ex_bond_issuance_master_Black_Duck_Notices_Report.txt NOTICE
#      - persist_to_workspace:
#          root: .
#          paths:
#            - "NOTICE"

workflows:
  version: 2
  build_and_test:
    jobs:
      - daml_test:
          daml_sdk_version: "1.8.0"
          context: refapps
      - integration_test:
          daml_sdk_version: "1.8.0"
          context: refapps
      - ui_test:
          daml_sdk_version: "1.8.0"
          context: refapps
  long_blackduck_only_on_master:
    jobs:
       - blackduck_check:
          daml_sdk_version: "1.8.0"
          context: blackduck
          filters:
            branches:
              only:
                - master
                - /blackduck-.*/
                - /.*circleci.*/
  scheduled_test:
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - daml_test:
          daml_sdk_version: "1.8.0"
          context: refapps
      - integration_test:
          daml_sdk_version: "1.8.0"
          context: refapps
      - ui_test:
          daml_sdk_version: "1.8.0"
          context: refapps
      - blackduck_check:
          daml_sdk_version: "1.8.0"
          context: blackduck
