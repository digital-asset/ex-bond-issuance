#
# Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  daml-executor:
    docker:
      - image: circleci/openjdk:11.0-jdk
  mvn-executor:
    docker:
      - image: circleci/openjdk:11.0-jdk
    resource_class: large
  docker_buildpack:
    docker:
      - image: circleci/buildpack-deps:xenial

only-release-tags: &only-release-tags
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/


commands:
  install_sdk:
    description: "Install the DAML SDK"
    parameters:
      version:
        type: string
    steps:
      - run:
          command: |
            ./scripts/install-daml.sh << parameters.version >>
  slack_notification:
    description: "Notify about failure on Slack"
    steps:
      - slack/status:
          fail_only: true
          only_for_branches: master
          webhook: '${SLACK_WEBHOOK}'
jobs:
  mvn_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: mvn-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
            - m2
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - run:
          command: |
            export PATH=${HOME}/.daml/bin:${PATH}
            mvn verify
      - run:
          command: |
            echo "Moving log files so they can be stored."
            mkdir logs
            mv *.log logs
          when: always
      - store_artifacts:
          path: logs
      - save_cache:
          paths:
            - ~/.m2
            - ~/.daml
          key: m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/surefire-reports
      - run:
          command: |
            mkdir pmd
            mv target/pmd.xml pmd
          when: always
      - store_artifacts:
          path: pmd
      - persist_to_workspace:
          root: target
          paths:
            - "*.jar"
            - "*.dar"
            - "lib"
            - "NOTICE"
      - slack_notification

  daml_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - daml-{{ checksum "daml.yaml" }}
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - run:
          command: |
            export PATH=${HOME}/.daml/bin:${PATH}
            python scripts/getfinlib.py << parameters.daml_sdk_version >>
            daml build -o target/bond-issuance.dar
            daml test --junit target/daml-test-reports/daml-test.xml --files src/main/daml/DA/RefApps/Bond/Test/FullScenario.daml
      - save_cache:
          paths:
            - ~/.daml
          key: daml-{{ checksum "daml.yaml" }}
      - store_test_results:
          path: target/daml-test-reports
      - store_artifacts:
          path: target/daml-test-reports
      - slack_notification

  blackduck_check:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
            - m2
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - save_cache:
          paths:
            - ~/.m2
            - ~/.daml
          key: m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
      - run:
          name: Maven Build
          command: |
            export PATH=${HOME}/.daml/bin:${PATH}
            mvn clean package
      - run:
          name: Install Yarn
          command: |
            curl -sL https://nodejs.org/dist/v12.16.3/node-v12.16.3-linux-x64.tar.xz -o ${HOME}/nodejs.tar.gz
            tar -xf ${HOME}/nodejs.tar.gz -C ${HOME}
            export PATH=${HOME}/node-v12.16.3-linux-x64/bin:${PATH}
            curl -o- -L https://yarnpkg.com/install.sh | bash
      - run:
          name: Yarn Build
          # TODO: Investigate why we DAML is not on the path.
          command: |
            export PATH=${HOME}/node-v12.16.3-linux-x64/bin:${PATH}
            export PATH=${HOME}/.daml/bin:${PATH}
            export PATH=${HOME}/.yarn/bin:${PATH}
            make buildui
            yarn install
            # recurse all directories with a package.json and run yarn install on them to resolve dependencies
            find . -type f \( ! -path '*node_modules*' \) -name package.json | while read hit ; do yarn install --cwd $(dirname "$hit") ; done
      - run:
          name: Run Blackduck Detect
          command: |
            export PATH=${HOME}/node-v12.16.3-linux-x64/bin:${PATH}
            bash <(curl -s https://raw.githubusercontent.com/DACH-NY/security-blackduck/master/synopsys-detect) \
            ci-build digitalasset_ex-bond-issuance master \
            --logging.level.com.synopsys.integration=DEBUG \
            --detect.notices.report=false \
            --detect.report.timeout=1800
### Temporarily disabled due to Blackduck issue (see https://github.com/digital-asset/ex-bond-issuance/pull/156)
#      - run:
#          command: cp digitalasset_ex_bond_issuance_master_Black_Duck_Notices_Report.txt NOTICE
#      - persist_to_workspace:
#          root: .
#          paths:
#            - "NOTICE"

  github_release:
    executor: docker_buildpack
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Push a new github release
          command: |
            ./scripts/release.sh ex-bond-issuance

workflows:
  version: 2
  build_and_test:
    jobs:
      - daml_test:
          daml_sdk_version: "1.7.0"
          context: refapps
      - mvn_test:
          daml_sdk_version: "1.7.0"
          context: refapps
  long_blackduck_only_on_master:
    jobs:
       - blackduck_check:
          daml_sdk_version: "1.7.0"
          context: blackduck
          filters:
            branches:
              only:
                - master
                - /blackduck-.*/
  build_and_release:
    jobs:
      - daml_test:
          <<: *only-release-tags
          daml_sdk_version: "1.7.0"
          context: refapps
      - mvn_test:
          <<: *only-release-tags
          daml_sdk_version: "1.7.0"
          context: refapps
      - blackduck_check:
          <<: *only-release-tags
          daml_sdk_version: "1.7.0"
          context: blackduck
      - github_release:
          context: github-refapp-repo-context
          requires:
            - daml_test
            - mvn_test
          <<: *only-release-tags
  scheduled_test:
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - daml_test:
          daml_sdk_version: "1.7.0"
          context: refapps
      - mvn_test:
          daml_sdk_version: "1.7.0"
          context: refapps
